id: wait-or-error
version: "1.0"
specVersion: "0.8"
name: Wait or Error
description: Simple workflow to simulate waiting for callback or error
start: ChooseOnState
dataInputSchema: schemas/wait-or-error__main-schema.json
extensions:
  - extensionid: workflow-output-schema
    outputSchema: schemas/workflow-output-schema.json
events:
  - name: callbackEvent
    type: wait-or-error
    source: wait-or-error
functions:
  - name: logFunction
    type: custom
    operation: sysout
  - name: getRnd
    type: custom
    operation: rest:get:http://www.randomnumberapi.com/api/v1.0/randomnumber                         
states:
  - name: ChooseOnState
    type: switch
    dataConditions:
      - condition: ${ .state == "Wait" }
        transition: TmpState
      - condition: ${ .state == "Error" }
        transition: ErrorFlow
    defaultCondition:
      transition: TmpState
  - name: TmpState
    type: operation
    actions:
      - functionRef:
          refName: getRnd
        actionDataFilter:
          toStateData: .getRndRes
    stateDataFilter:
      output: ".getRndRes"
    transition: WaitFlow 
  - name: WaitFlow
    type: inject
    data:
      result:
        outputs:
          - key: dataFeed
            value: .getRndRes
    transition: WaitTimeout
  - name: WaitTimeout
    type: callback
    action:
      name: logCallback
      functionRef:
        refName: logFunction
        arguments:
          message: Callback
    eventRef: callbackEvent
    timeouts:
      eventTimeout: PT10S
    transition: ProduceOutput
  - name: ProduceOutput
    type: inject
    data:
      result:
        completedWith: success
        message: A human-readable description of the completion status.
        nextWorkflows:
          - id: yamlgreet
            name: Suggested next workflow
          - id:   hello_world
            name: Less important next workflow
        outputs:
          - key: resourceOne
            value: FirstCreatedResourceName
          - key: resourceTwo
            value: SecondCreatedResourceName
            format: text
          - key: countOfSomething
            value: 42
            format: number
          - key: Important link somewhere
            value: https://foo.bar
            format: link
          - key: Important link somewhere else
            value: https://foo.bar.com
            format: link
    end: true
  - name: ErrorFlow
    type: inject
    data:
      result:
        completedWith: error
        message: A human-readable description of the error. However, still some additional output could be produced till an error occurred.
        outputs:
          - key: resourceOne
            value: FirstCreatedResourceName
          - key: resourceTwo
            value: SecondCreatedResourceName
            format: text
          - key: countOfSomething
            value: 42
            format: number
          - key: Important link somewhere
            value: https://foo.bar
            format: link
          - key: Important link somewhere else
            value: https://foo.bar.com
            format: link
    end: true
